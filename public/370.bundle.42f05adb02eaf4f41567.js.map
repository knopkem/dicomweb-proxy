{"version":3,"file":"370.bundle.42f05adb02eaf4f41567.js","mappings":"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","sources":["webpack:///../../../modes/longitudinal/src/toolbarButtons.ts","webpack:///../../../modes/longitudinal/src/id.js","webpack:///../../../modes/longitudinal/src/initToolGroups.js","webpack:///../../../modes/longitudinal/src/index.js"],"sourcesContent":["// TODO: torn, can either bake this here; or have to create a whole new button type\r\n// Only ways that you can pass in a custom React component for render :l\r\nimport {\r\n  // ExpandableToolbarButton,\r\n  // ListMenu,\r\n  WindowLevelMenuItem,\r\n} from '@ohif/ui';\r\nimport { defaults, ToolbarService } from '@ohif/core';\r\nimport type { Button, RunCommand } from '@ohif/core/types';\r\nimport { EVENTS } from '@cornerstonejs/core';\r\n\r\nconst { windowLevelPresets } = defaults;\r\n\r\nconst _createActionButton = ToolbarService._createButton.bind(null, 'action');\r\nconst _createToggleButton = ToolbarService._createButton.bind(null, 'toggle');\r\nconst _createToolButton = ToolbarService._createButton.bind(null, 'tool');\r\n\r\n/**\r\n *\r\n * @param {*} preset - preset number (from above import)\r\n * @param {*} title\r\n * @param {*} subtitle\r\n */\r\nfunction _createWwwcPreset(preset, title, subtitle) {\r\n  return {\r\n    id: preset.toString(),\r\n    title,\r\n    subtitle,\r\n    type: 'action',\r\n    commands: [\r\n      {\r\n        commandName: 'setWindowLevel',\r\n        commandOptions: {\r\n          ...windowLevelPresets[preset],\r\n        },\r\n        context: 'CORNERSTONE',\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\nconst toolGroupIds = ['default', 'mpr', 'SRToolGroup'];\r\n\r\n/**\r\n * Creates an array of 'setToolActive' commands for the given toolName - one for\r\n * each toolGroupId specified in toolGroupIds.\r\n * @param {string} toolName\r\n * @returns {Array} an array of 'setToolActive' commands\r\n */\r\nfunction _createSetToolActiveCommands(toolName) {\r\n  const temp = toolGroupIds.map(toolGroupId => ({\r\n    commandName: 'setToolActive',\r\n    commandOptions: {\r\n      toolGroupId,\r\n      toolName,\r\n    },\r\n    context: 'CORNERSTONE',\r\n  }));\r\n  return temp;\r\n}\r\n\r\nconst ReferenceLinesCommands: RunCommand = [\r\n  {\r\n    commandName: 'setSourceViewportForReferenceLinesTool',\r\n    context: 'CORNERSTONE',\r\n  },\r\n  {\r\n    commandName: 'setToolActive',\r\n    commandOptions: {\r\n      toolName: 'ReferenceLines',\r\n    },\r\n    context: 'CORNERSTONE',\r\n  },\r\n];\r\n\r\nconst toolbarButtons: Button[] = [\r\n  // Measurement\r\n  {\r\n    id: 'MeasurementTools',\r\n    type: 'ohif.splitButton',\r\n    props: {\r\n      groupId: 'MeasurementTools',\r\n      isRadio: true, // ?\r\n      // Switch?\r\n      primary: _createToolButton(\r\n        'Length',\r\n        'tool-length',\r\n        'Length',\r\n        [\r\n          {\r\n            commandName: 'setToolActive',\r\n            commandOptions: {\r\n              toolName: 'Length',\r\n            },\r\n            context: 'CORNERSTONE',\r\n          },\r\n          {\r\n            commandName: 'setToolActive',\r\n            commandOptions: {\r\n              toolName: 'SRLength',\r\n              toolGroupId: 'SRToolGroup',\r\n            },\r\n            // we can use the setToolActive command for this from Cornerstone commandsModule\r\n            context: 'CORNERSTONE',\r\n          },\r\n        ],\r\n        'Length'\r\n      ),\r\n      secondary: {\r\n        icon: 'chevron-down',\r\n        label: '',\r\n        isActive: true,\r\n        tooltip: 'More Measure Tools',\r\n      },\r\n      items: [\r\n        _createToolButton(\r\n          'Length',\r\n          'tool-length',\r\n          'Length',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'Length',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'SRLength',\r\n                toolGroupId: 'SRToolGroup',\r\n              },\r\n              // we can use the setToolActive command for this from Cornerstone commandsModule\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Length Tool'\r\n        ),\r\n        _createToolButton(\r\n          'Bidirectional',\r\n          'tool-bidirectional',\r\n          'Bidirectional',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'Bidirectional',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'SRBidirectional',\r\n                toolGroupId: 'SRToolGroup',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Bidirectional Tool'\r\n        ),\r\n        _createToolButton(\r\n          'ArrowAnnotate',\r\n          'tool-annotate',\r\n          'Annotation',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'ArrowAnnotate',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'SRArrowAnnotate',\r\n                toolGroupId: 'SRToolGroup',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Arrow Annotate'\r\n        ),\r\n        _createToolButton(\r\n          'EllipticalROI',\r\n          'tool-elipse',\r\n          'Ellipse',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'EllipticalROI',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'SREllipticalROI',\r\n                toolGroupId: 'SRToolGroup',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Ellipse Tool'\r\n        ),\r\n        _createToolButton(\r\n          'CircleROI',\r\n          'tool-circle',\r\n          'Circle',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'CircleROI',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'SRCircleROI',\r\n                toolGroupId: 'SRToolGroup',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Circle Tool'\r\n        ),\r\n      ],\r\n    },\r\n  },\r\n  // Zoom..\r\n  {\r\n    id: 'Zoom',\r\n    type: 'ohif.radioGroup',\r\n    props: {\r\n      type: 'tool',\r\n      icon: 'tool-zoom',\r\n      label: 'Zoom',\r\n      commands: _createSetToolActiveCommands('Zoom'),\r\n    },\r\n  },\r\n  // Window Level + Presets...\r\n  {\r\n    id: 'WindowLevel',\r\n    type: 'ohif.splitButton',\r\n    props: {\r\n      groupId: 'WindowLevel',\r\n      primary: _createToolButton(\r\n        'WindowLevel',\r\n        'tool-window-level',\r\n        'Window Level',\r\n        [\r\n          {\r\n            commandName: 'setToolActive',\r\n            commandOptions: {\r\n              toolName: 'WindowLevel',\r\n            },\r\n            context: 'CORNERSTONE',\r\n          },\r\n        ],\r\n        'Window Level'\r\n      ),\r\n      secondary: {\r\n        icon: 'chevron-down',\r\n        label: 'W/L Manual',\r\n        isActive: true,\r\n        tooltip: 'W/L Presets',\r\n      },\r\n      isAction: true, // ?\r\n      renderer: WindowLevelMenuItem,\r\n      items: [\r\n        _createWwwcPreset(1, 'Soft tissue', '400 / 40'),\r\n        _createWwwcPreset(2, 'Lung', '1500 / -600'),\r\n        _createWwwcPreset(3, 'Liver', '150 / 90'),\r\n        _createWwwcPreset(4, 'Bone', '2500 / 480'),\r\n        _createWwwcPreset(5, 'Brain', '80 / 40'),\r\n      ],\r\n    },\r\n  },\r\n  // Pan...\r\n  {\r\n    id: 'Pan',\r\n    type: 'ohif.radioGroup',\r\n    props: {\r\n      type: 'tool',\r\n      icon: 'tool-move',\r\n      label: 'Pan',\r\n      commands: _createSetToolActiveCommands('Pan'),\r\n    },\r\n  },\r\n  {\r\n    id: 'Capture',\r\n    type: 'ohif.action',\r\n    props: {\r\n      icon: 'tool-capture',\r\n      label: 'Capture',\r\n      type: 'action',\r\n      commands: [\r\n        {\r\n          commandName: 'showDownloadViewportModal',\r\n          commandOptions: {},\r\n          context: 'CORNERSTONE',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Layout',\r\n    type: 'ohif.layoutSelector',\r\n    props: {\r\n      rows: 3,\r\n      columns: 3,\r\n    },\r\n  },\r\n  {\r\n    id: 'MPR',\r\n    type: 'ohif.action',\r\n    props: {\r\n      type: 'toggle',\r\n      icon: 'icon-mpr',\r\n      label: 'MPR',\r\n      commands: [\r\n        {\r\n          commandName: 'toggleHangingProtocol',\r\n          commandOptions: {\r\n            protocolId: 'mpr',\r\n          },\r\n          context: 'DEFAULT',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  {\r\n    id: 'Crosshairs',\r\n    type: 'ohif.radioGroup',\r\n    props: {\r\n      type: 'tool',\r\n      icon: 'tool-crosshair',\r\n      label: 'Crosshairs',\r\n      commands: [\r\n        {\r\n          commandName: 'setToolActive',\r\n          commandOptions: {\r\n            toolName: 'Crosshairs',\r\n            toolGroupId: 'mpr',\r\n          },\r\n          context: 'CORNERSTONE',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  // More...\r\n  {\r\n    id: 'MoreTools',\r\n    type: 'ohif.splitButton',\r\n    props: {\r\n      isRadio: true, // ?\r\n      groupId: 'MoreTools',\r\n      primary: _createActionButton(\r\n        'Reset',\r\n        'tool-reset',\r\n        'Reset View',\r\n        [\r\n          {\r\n            commandName: 'resetViewport',\r\n            commandOptions: {},\r\n            context: 'CORNERSTONE',\r\n          },\r\n        ],\r\n        'Reset'\r\n      ),\r\n      secondary: {\r\n        icon: 'chevron-down',\r\n        label: '',\r\n        isActive: true,\r\n        tooltip: 'More Tools',\r\n      },\r\n      items: [\r\n        _createActionButton(\r\n          'Reset',\r\n          'tool-reset',\r\n          'Reset View',\r\n          [\r\n            {\r\n              commandName: 'resetViewport',\r\n              commandOptions: {},\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Reset'\r\n        ),\r\n        _createActionButton(\r\n          'rotate-right',\r\n          'tool-rotate-right',\r\n          'Rotate Right',\r\n          [\r\n            {\r\n              commandName: 'rotateViewportCW',\r\n              commandOptions: {},\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Rotate +90'\r\n        ),\r\n        _createActionButton(\r\n          'flip-horizontal',\r\n          'tool-flip-horizontal',\r\n          'Flip Horizontally',\r\n          [\r\n            {\r\n              commandName: 'flipViewportHorizontal',\r\n              commandOptions: {},\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Flip Horizontal'\r\n        ),\r\n        _createToggleButton(\r\n          'StackImageSync',\r\n          'link',\r\n          'Stack Image Sync',\r\n          [\r\n            {\r\n              commandName: 'toggleStackImageSync',\r\n            },\r\n          ],\r\n          'Enable position synchronization on stack viewports',\r\n          {\r\n            listeners: {\r\n              [EVENTS.STACK_VIEWPORT_NEW_STACK]: {\r\n                commandName: 'toggleStackImageSync',\r\n                commandOptions: { toggledState: true },\r\n              },\r\n            },\r\n          }\r\n        ),\r\n        _createToggleButton(\r\n          'ReferenceLines',\r\n          'tool-referenceLines', // change this with the new icon\r\n          'Reference Lines',\r\n          ReferenceLinesCommands,\r\n          'Show Reference Lines',\r\n          {\r\n            listeners: {\r\n              [EVENTS.STACK_VIEWPORT_NEW_STACK]: ReferenceLinesCommands,\r\n              [EVENTS.ACTIVE_VIEWPORT_ID_CHANGED]: ReferenceLinesCommands,\r\n            },\r\n          }\r\n        ),\r\n        _createToggleButton(\r\n          'ImageOverlayViewer',\r\n          'toggle-dicom-overlay',\r\n          'Image Overlay',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'ImageOverlayViewer',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Image Overlay',\r\n          { isActive: true }\r\n        ),\r\n        _createToolButton(\r\n          'StackScroll',\r\n          'tool-stack-scroll',\r\n          'Stack Scroll',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'StackScroll',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Stack Scroll'\r\n        ),\r\n        _createActionButton(\r\n          'invert',\r\n          'tool-invert',\r\n          'Invert',\r\n          [\r\n            {\r\n              commandName: 'invertViewport',\r\n              commandOptions: {},\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Invert Colors'\r\n        ),\r\n        _createToolButton(\r\n          'Probe',\r\n          'tool-probe',\r\n          'Probe',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'DragProbe',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Probe'\r\n        ),\r\n        _createToggleButton(\r\n          'cine',\r\n          'tool-cine',\r\n          'Cine',\r\n          [\r\n            {\r\n              commandName: 'toggleCine',\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Cine'\r\n        ),\r\n        _createToolButton(\r\n          'Angle',\r\n          'tool-angle',\r\n          'Angle',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'Angle',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Angle'\r\n        ),\r\n\r\n        // Next two tools can be added once icons are added\r\n        // _createToolButton(\r\n        //   'Cobb Angle',\r\n        //   'tool-cobb-angle',\r\n        //   'Cobb Angle',\r\n        //   [\r\n        //     {\r\n        //       commandName: 'setToolActive',\r\n        //       commandOptions: {\r\n        //         toolName: 'CobbAngle',\r\n        //       },\r\n        //       context: 'CORNERSTONE',\r\n        //     },\r\n        //   ],\r\n        //   'Cobb Angle'\r\n        // ),\r\n        // _createToolButton(\r\n        //   'Planar Freehand ROI',\r\n        //   'tool-freehand',\r\n        //   'PlanarFreehandROI',\r\n        //   [\r\n        //     {\r\n        //       commandName: 'setToolActive',\r\n        //       commandOptions: {\r\n        //         toolName: 'PlanarFreehandROI',\r\n        //       },\r\n        //       context: 'CORNERSTONE',\r\n        //     },\r\n        //   ],\r\n        //   'Planar Freehand ROI'\r\n        // ),\r\n        _createToolButton(\r\n          'Magnify',\r\n          'tool-magnify',\r\n          'Magnify',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'Magnify',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Magnify'\r\n        ),\r\n        _createToolButton(\r\n          'Rectangle',\r\n          'tool-rectangle',\r\n          'Rectangle',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'RectangleROI',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Rectangle'\r\n        ),\r\n        _createToolButton(\r\n          'CalibrationLine',\r\n          'tool-calibration',\r\n          'Calibration',\r\n          [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'CalibrationLine',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n          'Calibration Line'\r\n        ),\r\n        _createActionButton(\r\n          'TagBrowser',\r\n          'list-bullets',\r\n          'Dicom Tag Browser',\r\n          [\r\n            {\r\n              commandName: 'openDICOMTagViewer',\r\n              commandOptions: {},\r\n              context: 'DEFAULT',\r\n            },\r\n          ],\r\n          'Dicom Tag Browser'\r\n        ),\r\n      ],\r\n    },\r\n  },\r\n];\r\n\r\nexport default toolbarButtons;\r\n","import packageJson from '../package.json';\r\n\r\nconst id = packageJson.name;\r\n\r\nexport { id };\r\n","function initDefaultToolGroup(extensionManager, toolGroupService, commandsManager, toolGroupId) {\r\n  const utilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n\r\n  const { toolNames, Enums } = utilityModule.exports;\r\n\r\n  const tools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.WindowLevel,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Pan,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\r\n      },\r\n      { toolName: toolNames.StackScrollMouseWheel, bindings: [] },\r\n    ],\r\n    passive: [\r\n      { toolName: toolNames.Length },\r\n      {\r\n        toolName: toolNames.ArrowAnnotate,\r\n        configuration: {\r\n          getTextCallback: (callback, eventDetails) =>\r\n            commandsManager.runCommand('arrowTextCallback', {\r\n              callback,\r\n              eventDetails,\r\n            }),\r\n\r\n          changeTextCallback: (data, eventDetails, callback) =>\r\n            commandsManager.runCommand('arrowTextCallback', {\r\n              callback,\r\n              data,\r\n              eventDetails,\r\n            }),\r\n        },\r\n      },\r\n      { toolName: toolNames.Bidirectional },\r\n      { toolName: toolNames.DragProbe },\r\n      { toolName: toolNames.EllipticalROI },\r\n      { toolName: toolNames.CircleROI },\r\n      { toolName: toolNames.RectangleROI },\r\n      { toolName: toolNames.StackScroll },\r\n      { toolName: toolNames.Angle },\r\n      { toolName: toolNames.CobbAngle },\r\n      { toolName: toolNames.PlanarFreehandROI },\r\n      { toolName: toolNames.Magnify },\r\n      { toolName: toolNames.SegmentationDisplay },\r\n      { toolName: toolNames.CalibrationLine },\r\n    ],\r\n    // enabled\r\n    enabled: [{ toolName: toolNames.ImageOverlayViewer }],\r\n    // disabled\r\n    disabled: [{ toolName: toolNames.ReferenceLines }],\r\n  };\r\n\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupId, tools);\r\n}\r\n\r\nfunction initSRToolGroup(extensionManager, toolGroupService, commandsManager) {\r\n  const SRUtilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone-dicom-sr.utilityModule.tools'\r\n  );\r\n\r\n  if (!SRUtilityModule) {\r\n    return;\r\n  }\r\n\r\n  const CS3DUtilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n\r\n  const { toolNames: SRToolNames } = SRUtilityModule.exports;\r\n  const { toolNames, Enums } = CS3DUtilityModule.exports;\r\n  const tools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.WindowLevel,\r\n        bindings: [\r\n          {\r\n            mouseButton: Enums.MouseBindings.Primary,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        toolName: toolNames.Pan,\r\n        bindings: [\r\n          {\r\n            mouseButton: Enums.MouseBindings.Auxiliary,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [\r\n          {\r\n            mouseButton: Enums.MouseBindings.Secondary,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        toolName: toolNames.StackScrollMouseWheel,\r\n        bindings: [],\r\n      },\r\n    ],\r\n    passive: [\r\n      { toolName: SRToolNames.SRLength },\r\n      { toolName: SRToolNames.SRArrowAnnotate },\r\n      { toolName: SRToolNames.SRBidirectional },\r\n      { toolName: SRToolNames.SREllipticalROI },\r\n      { toolName: SRToolNames.SRCircleROI },\r\n    ],\r\n    enabled: [\r\n      {\r\n        toolName: SRToolNames.DICOMSRDisplay,\r\n        bindings: [],\r\n      },\r\n    ],\r\n    // disabled\r\n  };\r\n\r\n  const toolGroupId = 'SRToolGroup';\r\n  toolGroupService.createToolGroupAndAddTools(toolGroupId, tools);\r\n}\r\n\r\nfunction initMPRToolGroup(extensionManager, toolGroupService, commandsManager) {\r\n  const utilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n\r\n  const { toolNames, Enums } = utilityModule.exports;\r\n\r\n  const tools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.WindowLevel,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Pan,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\r\n      },\r\n      { toolName: toolNames.StackScrollMouseWheel, bindings: [] },\r\n    ],\r\n    passive: [\r\n      { toolName: toolNames.Length },\r\n      {\r\n        toolName: toolNames.ArrowAnnotate,\r\n        configuration: {\r\n          getTextCallback: (callback, eventDetails) =>\r\n            commandsManager.runCommand('arrowTextCallback', {\r\n              callback,\r\n              eventDetails,\r\n            }),\r\n\r\n          changeTextCallback: (data, eventDetails, callback) =>\r\n            commandsManager.runCommand('arrowTextCallback', {\r\n              callback,\r\n              data,\r\n              eventDetails,\r\n            }),\r\n        },\r\n      },\r\n      { toolName: toolNames.Bidirectional },\r\n      { toolName: toolNames.DragProbe },\r\n      { toolName: toolNames.EllipticalROI },\r\n      { toolName: toolNames.CircleROI },\r\n      { toolName: toolNames.RectangleROI },\r\n      { toolName: toolNames.StackScroll },\r\n      { toolName: toolNames.Angle },\r\n      { toolName: toolNames.CobbAngle },\r\n      { toolName: toolNames.PlanarFreehandROI },\r\n      { toolName: toolNames.SegmentationDisplay },\r\n    ],\r\n    disabled: [\r\n      {\r\n        toolName: toolNames.Crosshairs,\r\n        configuration: {\r\n          viewportIndicators: false,\r\n          autoPan: {\r\n            enabled: false,\r\n            panSize: 10,\r\n          },\r\n        },\r\n      },\r\n      { toolName: toolNames.ReferenceLines },\r\n    ],\r\n\r\n    // enabled\r\n    // disabled\r\n  };\r\n\r\n  toolGroupService.createToolGroupAndAddTools('mpr', tools);\r\n}\r\nfunction initVolume3DToolGroup(extensionManager, toolGroupService) {\r\n  const utilityModule = extensionManager.getModuleEntry(\r\n    '@ohif/extension-cornerstone.utilityModule.tools'\r\n  );\r\n\r\n  const { toolNames, Enums } = utilityModule.exports;\r\n\r\n  const tools = {\r\n    active: [\r\n      {\r\n        toolName: toolNames.TrackballRotateTool,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Primary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Zoom,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Secondary }],\r\n      },\r\n      {\r\n        toolName: toolNames.Pan,\r\n        bindings: [{ mouseButton: Enums.MouseBindings.Auxiliary }],\r\n      },\r\n    ],\r\n  };\r\n\r\n  toolGroupService.createToolGroupAndAddTools('volume3d', tools);\r\n}\r\n\r\nfunction initToolGroups(extensionManager, toolGroupService, commandsManager) {\r\n  initDefaultToolGroup(extensionManager, toolGroupService, commandsManager, 'default');\r\n  initSRToolGroup(extensionManager, toolGroupService, commandsManager);\r\n  initMPRToolGroup(extensionManager, toolGroupService, commandsManager);\r\n  initVolume3DToolGroup(extensionManager, toolGroupService);\r\n}\r\n\r\nexport default initToolGroups;\r\n","import { hotkeys } from '@ohif/core';\r\nimport toolbarButtons from './toolbarButtons';\r\nimport { id } from './id';\r\nimport initToolGroups from './initToolGroups';\r\n\r\n// Allow this mode by excluding non-imaging modalities such as SR, SEG\r\n// Also, SM is not a simple imaging modalities, so exclude it.\r\nconst NON_IMAGE_MODALITIES = ['SM', 'ECG', 'SR', 'SEG', 'RTSTRUCT'];\r\n\r\nconst ohif = {\r\n  layout: '@ohif/extension-default.layoutTemplateModule.viewerLayout',\r\n  sopClassHandler: '@ohif/extension-default.sopClassHandlerModule.stack',\r\n  thumbnailList: '@ohif/extension-default.panelModule.seriesList',\r\n};\r\n\r\nconst tracked = {\r\n  measurements: '@ohif/extension-measurement-tracking.panelModule.trackedMeasurements',\r\n  thumbnailList: '@ohif/extension-measurement-tracking.panelModule.seriesList',\r\n  viewport: '@ohif/extension-measurement-tracking.viewportModule.cornerstone-tracked',\r\n};\r\n\r\nconst dicomsr = {\r\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-sr.sopClassHandlerModule.dicom-sr',\r\n  viewport: '@ohif/extension-cornerstone-dicom-sr.viewportModule.dicom-sr',\r\n};\r\n\r\nconst dicomvideo = {\r\n  sopClassHandler: '@ohif/extension-dicom-video.sopClassHandlerModule.dicom-video',\r\n  viewport: '@ohif/extension-dicom-video.viewportModule.dicom-video',\r\n};\r\n\r\nconst dicompdf = {\r\n  sopClassHandler: '@ohif/extension-dicom-pdf.sopClassHandlerModule.dicom-pdf',\r\n  viewport: '@ohif/extension-dicom-pdf.viewportModule.dicom-pdf',\r\n};\r\n\r\nconst dicomSeg = {\r\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-seg.sopClassHandlerModule.dicom-seg',\r\n  viewport: '@ohif/extension-cornerstone-dicom-seg.viewportModule.dicom-seg',\r\n  panel: '@ohif/extension-cornerstone-dicom-seg.panelModule.panelSegmentation',\r\n};\r\n\r\nconst dicomRT = {\r\n  viewport: '@ohif/extension-cornerstone-dicom-rt.viewportModule.dicom-rt',\r\n  sopClassHandler: '@ohif/extension-cornerstone-dicom-rt.sopClassHandlerModule.dicom-rt',\r\n};\r\n\r\nconst extensionDependencies = {\r\n  // Can derive the versions at least process.env.from npm_package_version\r\n  '@ohif/extension-default': '^3.0.0',\r\n  '@ohif/extension-cornerstone': '^3.0.0',\r\n  '@ohif/extension-measurement-tracking': '^3.0.0',\r\n  '@ohif/extension-cornerstone-dicom-sr': '^3.0.0',\r\n  '@ohif/extension-cornerstone-dicom-seg': '^3.0.0',\r\n  '@ohif/extension-cornerstone-dicom-rt': '^3.0.0',\r\n  '@ohif/extension-dicom-pdf': '^3.0.1',\r\n  '@ohif/extension-dicom-video': '^3.0.1',\r\n};\r\n\r\nfunction modeFactory({ modeConfiguration }) {\r\n  let _activatePanelTriggersSubscriptions = [];\r\n  return {\r\n    // TODO: We're using this as a route segment\r\n    // We should not be.\r\n    id,\r\n    routeName: 'viewer',\r\n    displayName: 'Basic Viewer',\r\n    /**\r\n     * Lifecycle hooks\r\n     */\r\n    onModeEnter: ({ servicesManager, extensionManager, commandsManager }) => {\r\n      const {\r\n        measurementService,\r\n        toolbarService,\r\n        toolGroupService,\r\n        panelService,\r\n        customizationService,\r\n      } = servicesManager.services;\r\n\r\n      measurementService.clearMeasurements();\r\n\r\n      // Init Default and SR ToolGroups\r\n      initToolGroups(extensionManager, toolGroupService, commandsManager);\r\n\r\n      let unsubscribe;\r\n\r\n      const activateTool = () => {\r\n        toolbarService.recordInteraction({\r\n          groupId: 'WindowLevel',\r\n          interactionType: 'tool',\r\n          commands: [\r\n            {\r\n              commandName: 'setToolActive',\r\n              commandOptions: {\r\n                toolName: 'WindowLevel',\r\n              },\r\n              context: 'CORNERSTONE',\r\n            },\r\n          ],\r\n        });\r\n\r\n        // We don't need to reset the active tool whenever a viewport is getting\r\n        // added to the toolGroup.\r\n        unsubscribe();\r\n      };\r\n\r\n      // Since we only have one viewport for the basic cs3d mode and it has\r\n      // only one hanging protocol, we can just use the first viewport\r\n      ({ unsubscribe } = toolGroupService.subscribe(\r\n        toolGroupService.EVENTS.VIEWPORT_ADDED,\r\n        activateTool\r\n      ));\r\n\r\n      toolbarService.init(extensionManager);\r\n      toolbarService.addButtons(toolbarButtons);\r\n      toolbarService.createButtonSection('primary', [\r\n        'MeasurementTools',\r\n        'Zoom',\r\n        'WindowLevel',\r\n        'Pan',\r\n        'Capture',\r\n        'Layout',\r\n        'MPR',\r\n        'Crosshairs',\r\n        'MoreTools',\r\n      ]);\r\n\r\n      customizationService.addModeCustomizations([\r\n        {\r\n          id: 'segmentation.disableEditing',\r\n          value: true,\r\n        },\r\n      ]);\r\n\r\n      // // ActivatePanel event trigger for when a segmentation or measurement is added.\r\n      // // Do not force activation so as to respect the state the user may have left the UI in.\r\n      // _activatePanelTriggersSubscriptions = [\r\n      //   ...panelService.addActivatePanelTriggers(dicomSeg.panel, [\r\n      //     {\r\n      //       sourcePubSubService: segmentationService,\r\n      //       sourceEvents: [\r\n      //         segmentationService.EVENTS.SEGMENTATION_PIXEL_DATA_CREATED,\r\n      //       ],\r\n      //     },\r\n      //   ]),\r\n      //   ...panelService.addActivatePanelTriggers(tracked.measurements, [\r\n      //     {\r\n      //       sourcePubSubService: measurementService,\r\n      //       sourceEvents: [\r\n      //         measurementService.EVENTS.MEASUREMENT_ADDED,\r\n      //         measurementService.EVENTS.RAW_MEASUREMENT_ADDED,\r\n      //       ],\r\n      //     },\r\n      //   ]),\r\n      // ];\r\n    },\r\n    onModeExit: ({ servicesManager }) => {\r\n      const {\r\n        toolGroupService,\r\n        syncGroupService,\r\n        toolbarService,\r\n        segmentationService,\r\n        cornerstoneViewportService,\r\n      } = servicesManager.services;\r\n\r\n      _activatePanelTriggersSubscriptions.forEach(sub => sub.unsubscribe());\r\n      _activatePanelTriggersSubscriptions = [];\r\n\r\n      toolGroupService.destroy();\r\n      syncGroupService.destroy();\r\n      segmentationService.destroy();\r\n      cornerstoneViewportService.destroy();\r\n    },\r\n    validationTags: {\r\n      study: [],\r\n      series: [],\r\n    },\r\n\r\n    isValidMode: function ({ modalities }) {\r\n      const modalities_list = modalities.split('\\\\');\r\n\r\n      // Exclude non-image modalities\r\n      return !!modalities_list.filter(modality => NON_IMAGE_MODALITIES.indexOf(modality) === -1)\r\n        .length;\r\n    },\r\n    routes: [\r\n      {\r\n        path: 'longitudinal',\r\n        /*init: ({ servicesManager, extensionManager }) => {\r\n          //defaultViewerRouteInit\r\n        },*/\r\n        layoutTemplate: () => {\r\n          return {\r\n            id: ohif.layout,\r\n            props: {\r\n              leftPanels: [tracked.thumbnailList],\r\n              rightPanels: [dicomSeg.panel, tracked.measurements],\r\n              rightPanelDefaultClosed: true,\r\n              viewports: [\r\n                {\r\n                  namespace: tracked.viewport,\r\n                  displaySetsToDisplay: [ohif.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: dicomsr.viewport,\r\n                  displaySetsToDisplay: [dicomsr.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: dicomvideo.viewport,\r\n                  displaySetsToDisplay: [dicomvideo.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: dicompdf.viewport,\r\n                  displaySetsToDisplay: [dicompdf.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: dicomSeg.viewport,\r\n                  displaySetsToDisplay: [dicomSeg.sopClassHandler],\r\n                },\r\n                {\r\n                  namespace: dicomRT.viewport,\r\n                  displaySetsToDisplay: [dicomRT.sopClassHandler],\r\n                },\r\n              ],\r\n            },\r\n          };\r\n        },\r\n      },\r\n    ],\r\n    extensions: extensionDependencies,\r\n    // Default protocol gets self-registered by default in the init\r\n    hangingProtocol: 'default',\r\n    // Order is important in sop class handlers when two handlers both use\r\n    // the same sop class under different situations.  In that case, the more\r\n    // general handler needs to come last.  For this case, the dicomvideo must\r\n    // come first to remove video transfer syntax before ohif uses images\r\n    sopClassHandlers: [\r\n      dicomvideo.sopClassHandler,\r\n      dicomSeg.sopClassHandler,\r\n      ohif.sopClassHandler,\r\n      dicompdf.sopClassHandler,\r\n      dicomsr.sopClassHandler,\r\n      dicomRT.sopClassHandler,\r\n    ],\r\n    hotkeys: [...hotkeys.defaults.hotkeyBindings],\r\n    ...modeConfiguration,\r\n  };\r\n}\r\n\r\nconst mode = {\r\n  id,\r\n  modeFactory,\r\n  extensionDependencies,\r\n};\r\n\r\nexport default mode;\r\nexport { initToolGroups, toolbarButtons };\r\n"],"names":["windowLevelPresets","defaults","_createActionButton","ToolbarService","_createButton","bind","_createToggleButton","_createToolButton","_createWwwcPreset","preset","title","subtitle","id","toString","type","commands","commandName","commandOptions","context","toolGroupIds","_createSetToolActiveCommands","toolName","map","toolGroupId","ReferenceLinesCommands","props","groupId","isRadio","primary","secondary","icon","label","isActive","tooltip","items","isAction","renderer","WindowLevelMenuItem","rows","columns","protocolId","listeners","EVENTS","STACK_VIEWPORT_NEW_STACK","toggledState","ACTIVE_VIEWPORT_ID_CHANGED","packageJson","extensionManager","toolGroupService","commandsManager","utilityModule","getModuleEntry","toolNames","Enums","exports","tools","active","WindowLevel","bindings","mouseButton","MouseBindings","Primary","Pan","Auxiliary","Zoom","Secondary","StackScrollMouseWheel","passive","Length","ArrowAnnotate","configuration","getTextCallback","callback","eventDetails","runCommand","changeTextCallback","data","Bidirectional","DragProbe","EllipticalROI","CircleROI","RectangleROI","StackScroll","Angle","CobbAngle","PlanarFreehandROI","Magnify","SegmentationDisplay","CalibrationLine","enabled","ImageOverlayViewer","disabled","ReferenceLines","createToolGroupAndAddTools","initDefaultToolGroup","SRUtilityModule","CS3DUtilityModule","SRToolNames","SRLength","SRArrowAnnotate","SRBidirectional","SREllipticalROI","SRCircleROI","DICOMSRDisplay","initSRToolGroup","Crosshairs","viewportIndicators","autoPan","panSize","initMPRToolGroup","TrackballRotateTool","initVolume3DToolGroup","NON_IMAGE_MODALITIES","ohif","tracked","dicomsr","dicomvideo","dicompdf","dicomSeg","dicomRT","extensionDependencies","modeFactory","_ref","modeConfiguration","_activatePanelTriggersSubscriptions","routeName","displayName","onModeEnter","_ref2","servicesManager","measurementService","toolbarService","panelService","customizationService","services","unsubscribe","clearMeasurements","initToolGroups","subscribe","VIEWPORT_ADDED","activateTool","recordInteraction","interactionType","init","addButtons","toolbarButtons","createButtonSection","addModeCustomizations","value","onModeExit","_ref3","syncGroupService","segmentationService","cornerstoneViewportService","forEach","sub","destroy","validationTags","study","series","isValidMode","_ref4","modalities","split","filter","modality","indexOf","length","routes","path","layoutTemplate","leftPanels","rightPanels","rightPanelDefaultClosed","viewports","namespace","displaySetsToDisplay","extensions","hangingProtocol","sopClassHandlers","hotkeys","hotkeyBindings"],"sourceRoot":""}