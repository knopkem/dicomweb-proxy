{"version":3,"file":"687.bundle.fcd0488536d96bb682e5.js","mappings":"wHAEMA,E,4CAAKC,GCALC,EAAa,CACjBC,gBAAiB,CACfC,WAAY,YACZC,YAAa,UACbC,oBAAoB,GAEtBC,YAAa,CACX,CACEP,GAAI,yBAKJQ,EAAa,CACjBL,gBAAiB,CACfC,WAAY,YACZC,YAAa,UACbC,oBAAoB,GAEtBC,YAAa,CACX,CACEE,wBAAyB,EACzBT,GAAI,yBAKJU,EAAa,CACjBP,gBAAiB,CACfC,WAAY,YACZC,YAAa,UACbC,oBAAoB,GAEtBC,YAAa,CACX,CACEE,wBAAyB,EACzBT,GAAI,yBAKJW,EAAa,CACjBR,gBAAiB,CACfC,WAAY,YACZC,YAAa,UACbC,oBAAoB,GAEtBC,YAAa,CACX,CACEE,wBAAyB,EACzBT,GAAI,yBAiCJY,EAAa,CACjBT,gBAAiB,CACfC,WAAY,YACZC,YAAa,UACbC,oBAAoB,GAEtBC,YAAa,CACX,CACEE,wBAAyB,EACzBT,GAAI,yBAKJa,EAAa,CACjBV,gBAAiB,CACfC,WAAY,YACZC,YAAa,UACbC,oBAAoB,GAEtBC,YAAa,CACX,CACEE,wBAAyB,EACzBT,GAAI,yBAKJc,EAAa,CACjBX,gBAAiB,CACfC,WAAY,YACZC,YAAa,UACbC,oBAAoB,GAEtBC,YAAa,CACX,CACEE,wBAAyB,EACzBT,GAAI,yBAIJe,EAAa,CACjBZ,gBAAiB,CACfC,WAAY,YACZC,YAAa,UACbC,oBAAoB,GAEtBC,YAAa,CACX,CACEE,wBAAyB,EACzBT,GAAI,yBAKJgB,EAAoB,CACxBC,WAAY,OACZC,WAAY,CACVC,KAAM,EACNC,QAAS,IA8Fb,EA7EqD,CACnDC,6BAA6B,EAC7BrB,GAAI,qBACJsB,YAAa,4CACbC,KAAM,cACNC,sBAAuB,CACrB,CACExB,GAAI,kBACJyB,OAAQ,GACRC,UAAW,gCACXC,WAAY,CACVC,YAAa,KAInBC,aAAc,CAAC,WACfC,oBAAqB,CACnBC,oBAAqB,CACnBC,oBAAqB,CACnB,CACEN,UAAW,iBACXC,WAAY,CACVC,YAAa,CAAEK,MAAO,KAK1B,CACEP,UAAW,sBACXD,OAAQ,GACRE,WAAY,CACVO,QAAQ,OAMlBC,gBAAiB,CACfhC,gBAAiB,CACfiC,aAAc,QACd/B,YAAa,UACbC,oBAAoB,GAEtBC,YAAa,CACX,CACEP,GAAI,sBACJS,yBAA0B,KAIhC4B,OAAQ,CACN,CACEd,KAAM,eACNP,oBACAsB,UAAW,CAACpC,EAAYM,EAAYE,EAAYC,IAElD,CACEY,KAAM,mBACNP,kBAvEsB,CAC1BC,WAAY,OACZC,WAAY,CACVC,KAAM,EACNC,QAAS,IAsEPkB,UAAW,CAACpC,EAAYM,EArKX,CACjBL,gBAAiB,CACfC,WAAY,YACZC,YAAa,UACbC,oBAAoB,GAEtBC,YAAa,CACX,CACEE,wBAAyB,EACzBT,GAAI,yBA4J4CU,EAAYC,EAvJ/C,CACjBR,gBAAiB,CACfC,WAAY,YACZC,YAAa,UACbC,oBAAoB,GAEtBC,YAAa,CACX,CACEE,wBAAyB,EACzBT,GAAI,2BAgJN,CACEuB,KAAM,eACNP,oBACAsB,UAAW,CAACxB,EAAYC,EAAYH,EAAYC,IAElD,CACEU,KAAM,eACNP,oBACAsB,UAAW,CAAC1B,EAAYC,EAAYC,EAAYC,KAGpDwB,0BAA2B,GC5J7B,EA7DqB,CACnBvC,GAAI,eAGJ,eAAgB,CACdwC,KAAM,OACNC,KAAM,QAER,eAAgB,CACdD,KAAM,OACNC,KAAM,QAER,gBAAiB,CACfD,KAAM,UACNC,KAAM,QAER,gBAAiB,CACfD,KAAM,SACNC,KAAM,QAIR,gBAAiB,CACfD,KAAM,uCACNE,MAAO,SAET,gBAAiB,CACfF,KAAM,uBACNE,MAAO,WAET,gBAAiB,CACfF,KAAM,aAER,gBAAiB,CACfA,KAAM,OAER,eAAgB,CACdA,KAAM,MAER,gBAAiB,CACfA,KAAM,MAIR,eAAgB,CACdA,KAAM,QACNE,MAAO,UACPD,KAAM,eAER,eAAgB,CACdD,KAAM,UACNE,MAAO,UACPD,KAAM,eAER,eAAgB,CACdD,KAAM,WACNE,MAAO,UACPD,KAAM,gBClDV,EAzBqB,CACnBzC,GAAI,kCAGJ2C,UAAW,SAAUC,GACnB,MAAQC,KAAMC,GAAYC,KAC1B,IAAKD,EACH,MAAM,IAAIE,MAAO,QAAOD,wBAE1B,MACMF,EADeD,EAAqBK,IAAI,gBACpBH,GAC1B,MAAO,IACFC,KACHD,UACAD,KAAM,CAAEK,IAAKJ,KAAYD,GACzBM,MAAON,EAAKL,KACZY,SAAU,CACR,CACEC,YAAa,sBAIrB,GC6EF,EAnG4B,CAC1BrD,GAAI,0BACJsD,kBAAmB,mBACnBC,MAAO,CACL,CACEvD,GAAI,yBAEJwD,SAAUC,IAAA,IAAC,eAAEC,GAAgBD,EAAA,QAAOC,CAAc,EAClDC,MAAO,CACL,CACEL,kBAAmB,sBACnBH,MAAO,OACPS,WAAY,cACZC,QAAS,wBAEX,CACEP,kBAAmB,sBACnBH,MAAO,UACPS,WAAY,cACZC,QAAS,2BAEX,CAEEV,MAAO,qBACPC,SAAU,CACR,CACEC,YAAa,uBAInB,CACEF,MAAO,YACPC,SAAU,CACR,CACEC,YAAa,yBASnB,CACEF,MAAO,iBACPK,SAAUM,IAAA,IAAC,SAAEC,GAAUD,EAAA,MAAsB,iBAAjBC,GAAU/D,EAAqB,EAC3DgE,YAAY,EACZH,QAAS,iCAKf,CACE7D,GAAI,8BACJwD,SAAUS,IAAA,IAAC,eAAEP,GAAgBO,EAAA,OAAK,CAAK,EACvCN,MAAO,CACL,CACEL,kBAAmB,kCACnBT,KAAM,gBAER,CACES,kBAAmB,kCACnBT,KAAM,kBAKZ,CACE7C,GAAI,0BACJwD,SAAUU,IAAA,IAAC,eAAER,GAAgBQ,EAAA,OAAK,CAAK,EACvCP,MAAO,CACL,CACEL,kBAAmB,kCACnBT,KAAM,iBAER,CACES,kBAAmB,kCACnBT,KAAM,mBAKZ,CACE7C,GAAI,uBACJwD,SAAUW,IAAA,IAAC,eAAET,GAAgBS,EAAA,QAAOT,CAAc,EAClDC,MAAO,CACL,CACEL,kBAAmB,kCACnBT,KAAM,gBAER,CACES,kBAAmB,kCACnBT,KAAM,oBCpFD,SAAS,EAACuB,EAAYC,GACnC,MAAM,cAAEC,EAAa,iBAAEC,GAAqBxB,KAC5C,IAAKuB,EAEH,OADAE,QAAQC,IAAI,+BAAgC1B,MACpC,gCAA+BA,KAAK/C,KAE9C,IAAKuE,EAEH,OADAC,QAAQC,IAAI,kCAAmC1B,MACvC,mCAAkCA,KAAK/C,KAEjD,MAAM,uBAAE0E,EAAsB,YAAEnE,GAAgB8D,EAC1CM,EAAQD,EAAuBzB,IAAIsB,GACzC,IAAKI,EAEH,OADAH,QAAQC,IAAI,2BAA4BF,IACjC,EAET,MAAM,sBAAEK,GAA0BD,EAC5BE,EAAgBtE,EAAYuE,MAAKC,GAAMA,EAAGH,uBAAyBA,IACzE,IAAKC,EAEH,OADAL,QAAQC,IAAI,4BAA6BG,EAAuB,KAAMrE,IAC/D,EAGT,OADkBsE,EAAcP,KACXF,EAAWE,EAClC,CChCA,SAAgBU,EAAOC,IAAcA,GAAW1E,aAAa2E,OCA7D,GAAgBF,EAAOC,IACrBE,KAAKC,OAAQH,GAAW1E,aAAa8E,OAAMC,GAAMA,EAAGC,gBAAkB,KAAM,CAAC,IC8D/E,EA/CkD,CAIhDvF,GAAE,EAUFwF,gBAAiB/B,IAA2D,IAA1D,gBAAEgC,GAAmDhC,EACrE,MAAM,uBAAEiC,GAA2BD,EAAgBE,SACnDD,EAAuBE,mBACrB,sBACA,0BACAC,GAEFH,EAAuBE,mBACrB,oBACA,oCACAE,GAEFJ,EAAuBE,mBACrB,SACA,gDACAG,EACD,EAIHC,uBChDa,WACb,MAAO,CACL,CACEzE,KAAM,sBACNU,MAAO,CAACgE,EAAcC,EAAqBC,IAGjD,ED2CEC,yBAA0BA,IACjB,CAEL,CACE7E,KAAM8E,EAAarG,GACnB+D,SAAUsC,I","sources":["webpack:///../../../extensions/test-extension/src/id.js","webpack:///../../../extensions/test-extension/src/hpTestSwitch.ts","webpack:///../../../extensions/test-extension/src/custom-context-menu/codingValues.ts","webpack:///../../../extensions/test-extension/src/custom-context-menu/contextMenuCodeItem.ts","webpack:///../../../extensions/test-extension/src/custom-context-menu/findingsContextMenu.ts","webpack:///../../../extensions/test-extension/src/custom-attribute/sameAs.ts","webpack:///../../../extensions/test-extension/src/custom-attribute/numberOfDisplaySets.ts","webpack:///../../../extensions/test-extension/src/custom-attribute/maxNumImageFrames.ts","webpack:///../../../extensions/test-extension/src/index.tsx","webpack:///../../../extensions/test-extension/src/getCustomizationModule.ts"],"sourcesContent":["import packageJson from '../package.json';\r\n\r\nconst id = packageJson.name;\r\n\r\nexport { id };\r\n","import { Types } from '@ohif/core';\r\n\r\nconst viewport0a = {\r\n  viewportOptions: {\r\n    viewportId: 'viewportA',\r\n    toolGroupId: 'default',\r\n    allowUnmatchedView: true,\r\n  },\r\n  displaySets: [\r\n    {\r\n      id: 'defaultDisplaySetId',\r\n    },\r\n  ],\r\n};\r\n\r\nconst viewport1b = {\r\n  viewportOptions: {\r\n    viewportId: 'viewportB',\r\n    toolGroupId: 'default',\r\n    allowUnmatchedView: true,\r\n  },\r\n  displaySets: [\r\n    {\r\n      matchedDisplaySetsIndex: 1,\r\n      id: 'defaultDisplaySetId',\r\n    },\r\n  ],\r\n};\r\n\r\nconst viewport2c = {\r\n  viewportOptions: {\r\n    viewportId: 'viewportC',\r\n    toolGroupId: 'default',\r\n    allowUnmatchedView: true,\r\n  },\r\n  displaySets: [\r\n    {\r\n      matchedDisplaySetsIndex: 2,\r\n      id: 'defaultDisplaySetId',\r\n    },\r\n  ],\r\n};\r\n\r\nconst viewport3d = {\r\n  viewportOptions: {\r\n    viewportId: 'viewportD',\r\n    toolGroupId: 'default',\r\n    allowUnmatchedView: true,\r\n  },\r\n  displaySets: [\r\n    {\r\n      matchedDisplaySetsIndex: 3,\r\n      id: 'defaultDisplaySetId',\r\n    },\r\n  ],\r\n};\r\n\r\nconst viewport4e = {\r\n  viewportOptions: {\r\n    viewportId: 'viewportE',\r\n    toolGroupId: 'default',\r\n    allowUnmatchedView: true,\r\n  },\r\n  displaySets: [\r\n    {\r\n      matchedDisplaySetsIndex: 4,\r\n      id: 'defaultDisplaySetId',\r\n    },\r\n  ],\r\n};\r\n\r\nconst viewport5f = {\r\n  viewportOptions: {\r\n    viewportId: 'viewportF',\r\n    toolGroupId: 'default',\r\n    allowUnmatchedView: true,\r\n  },\r\n  displaySets: [\r\n    {\r\n      matchedDisplaySetsIndex: 5,\r\n      id: 'defaultDisplaySetId',\r\n    },\r\n  ],\r\n};\r\n\r\nconst viewport3a = {\r\n  viewportOptions: {\r\n    viewportId: 'viewportA',\r\n    toolGroupId: 'default',\r\n    allowUnmatchedView: true,\r\n  },\r\n  displaySets: [\r\n    {\r\n      matchedDisplaySetsIndex: 3,\r\n      id: 'defaultDisplaySetId',\r\n    },\r\n  ],\r\n};\r\n\r\nconst viewport2b = {\r\n  viewportOptions: {\r\n    viewportId: 'viewportB',\r\n    toolGroupId: 'default',\r\n    allowUnmatchedView: true,\r\n  },\r\n  displaySets: [\r\n    {\r\n      matchedDisplaySetsIndex: 2,\r\n      id: 'defaultDisplaySetId',\r\n    },\r\n  ],\r\n};\r\n\r\nconst viewport1c = {\r\n  viewportOptions: {\r\n    viewportId: 'viewportC',\r\n    toolGroupId: 'default',\r\n    allowUnmatchedView: true,\r\n  },\r\n  displaySets: [\r\n    {\r\n      matchedDisplaySetsIndex: 1,\r\n      id: 'defaultDisplaySetId',\r\n    },\r\n  ],\r\n};\r\nconst viewport0d = {\r\n  viewportOptions: {\r\n    viewportId: 'viewportD',\r\n    toolGroupId: 'default',\r\n    allowUnmatchedView: true,\r\n  },\r\n  displaySets: [\r\n    {\r\n      matchedDisplaySetsIndex: 0,\r\n      id: 'defaultDisplaySetId',\r\n    },\r\n  ],\r\n};\r\n\r\nconst viewportStructure = {\r\n  layoutType: 'grid',\r\n  properties: {\r\n    rows: 2,\r\n    columns: 2,\r\n  },\r\n};\r\n\r\nconst viewportStructure32 = {\r\n  layoutType: 'grid',\r\n  properties: {\r\n    rows: 2,\r\n    columns: 3,\r\n  },\r\n};\r\n\r\n/**\r\n * This hanging protocol is a test hanging protocol used to apply various\r\n * layouts in different positions for display, re-using earlier names in\r\n * various orders.\r\n */\r\nconst hpTestSwitch: Types.HangingProtocol.Protocol = {\r\n  hasUpdatedPriorsInformation: false,\r\n  id: '@ohif/mnTestSwitch',\r\n  description: 'Has various hanging protocol grid layouts',\r\n  name: 'Test Switch',\r\n  protocolMatchingRules: [\r\n    {\r\n      id: 'OneOrMoreSeries',\r\n      weight: 25,\r\n      attribute: 'numberOfDisplaySetsWithImages',\r\n      constraint: {\r\n        greaterThan: 0,\r\n      },\r\n    },\r\n  ],\r\n  toolGroupIds: ['default'],\r\n  displaySetSelectors: {\r\n    defaultDisplaySetId: {\r\n      seriesMatchingRules: [\r\n        {\r\n          attribute: 'numImageFrames',\r\n          constraint: {\r\n            greaterThan: { value: 0 },\r\n          },\r\n        },\r\n        // This display set will select the specified items by preference\r\n        // It has no affect if nothing is specified in the URL.\r\n        {\r\n          attribute: 'isDisplaySetFromUrl',\r\n          weight: 10,\r\n          constraint: {\r\n            equals: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  defaultViewport: {\r\n    viewportOptions: {\r\n      viewportType: 'stack',\r\n      toolGroupId: 'default',\r\n      allowUnmatchedView: true,\r\n    },\r\n    displaySets: [\r\n      {\r\n        id: 'defaultDisplaySetId',\r\n        matchedDisplaySetsIndex: -1,\r\n      },\r\n    ],\r\n  },\r\n  stages: [\r\n    {\r\n      name: '2x2 0a1b2c3d',\r\n      viewportStructure,\r\n      viewports: [viewport0a, viewport1b, viewport2c, viewport3d],\r\n    },\r\n    {\r\n      name: '3x2 0a1b4e2c3d5f',\r\n      viewportStructure: viewportStructure32,\r\n      // Note the following structure simply preserves the viewportId for\r\n      // a given screen position\r\n      viewports: [viewport0a, viewport1b, viewport4e, viewport2c, viewport3d, viewport5f],\r\n    },\r\n    {\r\n      name: '2x2 1c0d3a2b',\r\n      viewportStructure,\r\n      viewports: [viewport1c, viewport0d, viewport3a, viewport2b],\r\n    },\r\n    {\r\n      name: '2x2 3a2b1c0d',\r\n      viewportStructure,\r\n      viewports: [viewport3a, viewport2b, viewport1c, viewport0d],\r\n    },\r\n  ],\r\n  numberOfPriorsReferenced: -1,\r\n};\r\n\r\nexport default hpTestSwitch;\r\n","/**\r\n * Coding values is a map of simple string coding values to a set of\r\n * attributes associated with the coding value.\r\n *\r\n * The simple string is in the format `<codingSchemeDesignator>:<codingValue>`\r\n * That allows extracting the DICOM attributes from the designator/value, and\r\n * allows for passing around the simple string.\r\n * The additional attributes contained in the object include:\r\n *       * text - this is the coding scheme text display value, and may be language specific\r\n *       * type - this defines a named type, typically 'site'.  Different names can be used\r\n *                to allow setting different findingSites values in order to define a hierarchy.\r\n *       * color - used to apply annotation color\r\n * It is also possible to define additional attributes here, used by custom\r\n * extensions.\r\n *\r\n * See https://dicom.nema.org/medical/dicom/current/output/html/part16.html\r\n * for definitions of SCT and other code values.\r\n */\r\nconst codingValues = {\r\n  id: 'codingValues',\r\n\r\n  // Sites\r\n  'SCT:69536005': {\r\n    text: 'Head',\r\n    type: 'site',\r\n  },\r\n  'SCT:45048000': {\r\n    text: 'Neck',\r\n    type: 'site',\r\n  },\r\n  'SCT:818981001': {\r\n    text: 'Abdomen',\r\n    type: 'site',\r\n  },\r\n  'SCT:816092008': {\r\n    text: 'Pelvis',\r\n    type: 'site',\r\n  },\r\n\r\n  // Findings\r\n  'SCT:371861004': {\r\n    text: 'Mild intimal coronary irregularities',\r\n    color: 'green',\r\n  },\r\n  'SCT:194983005': {\r\n    text: 'Aortic insufficiency',\r\n    color: 'darkred',\r\n  },\r\n  'SCT:399232001': {\r\n    text: '2-chamber',\r\n  },\r\n  'SCT:103340004': {\r\n    text: 'SAX',\r\n  },\r\n  'SCT:91134007': {\r\n    text: 'MV',\r\n  },\r\n  'SCT:122972007': {\r\n    text: 'PV',\r\n  },\r\n\r\n  // Orientations\r\n  'SCT:24422004': {\r\n    text: 'Axial',\r\n    color: '#000000',\r\n    type: 'orientation',\r\n  },\r\n  'SCT:81654009': {\r\n    text: 'Coronal',\r\n    color: '#000000',\r\n    type: 'orientation',\r\n  },\r\n  'SCT:30730003': {\r\n    text: 'Sagittal',\r\n    color: '#000000',\r\n    type: 'orientation',\r\n  },\r\n};\r\n\r\nexport default codingValues;\r\n","const codeMenuItem = {\r\n  id: '@ohif/contextMenuAnnotationCode',\r\n\r\n  /** Applies the code value setup for this item */\r\n  transform: function (customizationService) {\r\n    const { code: codeRef } = this;\r\n    if (!codeRef) {\r\n      throw new Error(`item ${this} has no code ref`);\r\n    }\r\n    const codingValues = customizationService.get('codingValues');\r\n    const code = codingValues[codeRef];\r\n    return {\r\n      ...this,\r\n      codeRef,\r\n      code: { ref: codeRef, ...code },\r\n      label: code.text,\r\n      commands: [\r\n        {\r\n          commandName: 'updateMeasurement',\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n\r\nexport default codeMenuItem;\r\n","const findingsContextMenu = {\r\n  id: 'measurementsContextMenu',\r\n  customizationType: 'ohif.contextMenu',\r\n  menus: [\r\n    {\r\n      id: 'forExistingMeasurement',\r\n      // selector restricts context menu to when there is nearbyToolData\r\n      selector: ({ nearbyToolData }) => !!nearbyToolData,\r\n      items: [\r\n        {\r\n          customizationType: 'ohif.contextSubMenu',\r\n          label: 'Site',\r\n          actionType: 'ShowSubMenu',\r\n          subMenu: 'siteSelectionSubMenu',\r\n        },\r\n        {\r\n          customizationType: 'ohif.contextSubMenu',\r\n          label: 'Finding',\r\n          actionType: 'ShowSubMenu',\r\n          subMenu: 'findingSelectionSubMenu',\r\n        },\r\n        {\r\n          // customizationType is implicit here in the configuration setup\r\n          label: 'Delete Measurement',\r\n          commands: [\r\n            {\r\n              commandName: 'deleteMeasurement',\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          label: 'Add Label',\r\n          commands: [\r\n            {\r\n              commandName: 'setMeasurementLabel',\r\n            },\r\n          ],\r\n        },\r\n\r\n        // The example below shows how to include a delegating sub-menu,\r\n        // Only available on the @ohif/mnGrid hanging protocol\r\n        // To demonstrate, select the 3x1 layout from the protocol menu\r\n        // and right click on a measurement.\r\n        {\r\n          label: 'IncludeSubMenu',\r\n          selector: ({ protocol }) => protocol?.id === '@ohif/mnGrid',\r\n          delegating: true,\r\n          subMenu: 'orientationSelectionSubMenu',\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      id: 'orientationSelectionSubMenu',\r\n      selector: ({ nearbyToolData }) => false,\r\n      items: [\r\n        {\r\n          customizationType: '@ohif/contextMenuAnnotationCode',\r\n          code: 'SCT:24422004',\r\n        },\r\n        {\r\n          customizationType: '@ohif/contextMenuAnnotationCode',\r\n          code: 'SCT:81654009',\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      id: 'findingSelectionSubMenu',\r\n      selector: ({ nearbyToolData }) => false,\r\n      items: [\r\n        {\r\n          customizationType: '@ohif/contextMenuAnnotationCode',\r\n          code: 'SCT:371861004',\r\n        },\r\n        {\r\n          customizationType: '@ohif/contextMenuAnnotationCode',\r\n          code: 'SCT:194983005',\r\n        },\r\n      ],\r\n    },\r\n\r\n    {\r\n      id: 'siteSelectionSubMenu',\r\n      selector: ({ nearbyToolData }) => !!nearbyToolData,\r\n      items: [\r\n        {\r\n          customizationType: '@ohif/contextMenuAnnotationCode',\r\n          code: 'SCT:69536005',\r\n        },\r\n        {\r\n          customizationType: '@ohif/contextMenuAnnotationCode',\r\n          code: 'SCT:45048000',\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n\r\nexport default findingsContextMenu;\r\n","/**\r\n * This function extracts an attribute from the already matched display sets, and\r\n * compares it to the attribute in the current display set, and indicates if they match.\r\n * From 'this', it uses:\r\n *    `sameAttribute` as the attribute name to look for\r\n *    `sameDisplaySetId` as the display set id to look for\r\n * From `options`, it looks for\r\n */\r\nexport default function (displaySet, options) {\r\n  const { sameAttribute, sameDisplaySetId } = this;\r\n  if (!sameAttribute) {\r\n    console.log('sameAttribute not defined in', this);\r\n    return `sameAttribute not defined in ${this.id}`;\r\n  }\r\n  if (!sameDisplaySetId) {\r\n    console.log('sameDisplaySetId not defined in', this);\r\n    return `sameDisplaySetId not defined in ${this.id}`;\r\n  }\r\n  const { displaySetMatchDetails, displaySets } = options;\r\n  const match = displaySetMatchDetails.get(sameDisplaySetId);\r\n  if (!match) {\r\n    console.log('No match for display set', sameDisplaySetId);\r\n    return false;\r\n  }\r\n  const { displaySetInstanceUID } = match;\r\n  const altDisplaySet = displaySets.find(it => it.displaySetInstanceUID == displaySetInstanceUID);\r\n  if (!altDisplaySet) {\r\n    console.log('No display set found with', displaySetInstanceUID, 'in', displaySets);\r\n    return false;\r\n  }\r\n  const testValue = altDisplaySet[sameAttribute];\r\n  return testValue === displaySet[sameAttribute];\r\n}\r\n","export default (study, extraData) => extraData?.displaySets?.length;\r\n","export default (study, extraData) =>\r\n  Math.max(...(extraData?.displaySets?.map?.(ds => ds.numImageFrames ?? 0) || [0]));\r\n","import { Types } from '@ohif/core';\r\n\r\nimport { id } from './id';\r\n\r\nimport hpTestSwitch from './hpTestSwitch';\r\n\r\nimport getCustomizationModule from './getCustomizationModule';\r\n// import {setViewportZoomPan, storeViewportZoomPan } from './custom-viewport/setViewportZoomPan';\r\nimport sameAs from './custom-attribute/sameAs';\r\nimport numberOfDisplaySets from './custom-attribute/numberOfDisplaySets';\r\nimport maxNumImageFrames from './custom-attribute/maxNumImageFrames';\r\n\r\n/**\r\n * The test extension provides additional behaviour for testing various\r\n * customizations and settings for OHIF.\r\n */\r\nconst testExtension: Types.Extensions.Extension = {\r\n  /**\r\n   * Only required property. Should be a unique value across all extensions.\r\n   */\r\n  id,\r\n\r\n  /** Register additional behaviour:\r\n   *   * HP custom attribute seriesDescriptions to retrieve an array of all series descriptions\r\n   *   * HP custom attribute numberOfDisplaySets to retrieve the number of display sets\r\n   *   * HP custom attribute numberOfDisplaySetsWithImages to retrieve the number of display sets containing images\r\n   *   * HP custom attribute to return a boolean true, when the attribute sameAttribute has the same\r\n   *     value as another series description in an already matched display set selector named with the value\r\n   *     in `sameDisplaySetId`\r\n   */\r\n  preRegistration: ({ servicesManager }: Types.Extensions.ExtensionParams) => {\r\n    const { hangingProtocolService } = servicesManager.services;\r\n    hangingProtocolService.addCustomAttribute(\r\n      'numberOfDisplaySets',\r\n      'Number of displays sets',\r\n      numberOfDisplaySets\r\n    );\r\n    hangingProtocolService.addCustomAttribute(\r\n      'maxNumImageFrames',\r\n      'Maximum of number of image frames',\r\n      maxNumImageFrames\r\n    );\r\n    hangingProtocolService.addCustomAttribute(\r\n      'sameAs',\r\n      'Match an attribute in an existing display set',\r\n      sameAs\r\n    );\r\n  },\r\n\r\n  /** Registers some customizations */\r\n  getCustomizationModule,\r\n\r\n  getHangingProtocolModule: () => {\r\n    return [\r\n      // Create a MxN hanging protocol available by default\r\n      {\r\n        name: hpTestSwitch.id,\r\n        protocol: hpTestSwitch,\r\n      },\r\n    ];\r\n  },\r\n};\r\n\r\nexport default testExtension;\r\n","import { codingValues, contextMenuCodeItem, findingsContextMenu } from './custom-context-menu';\r\n\r\nexport default function getCustomizationModule() {\r\n  return [\r\n    {\r\n      name: 'custom-context-menu',\r\n      value: [codingValues, contextMenuCodeItem, findingsContextMenu],\r\n    },\r\n  ];\r\n}\r\n"],"names":["id","packageJson","viewport0a","viewportOptions","viewportId","toolGroupId","allowUnmatchedView","displaySets","viewport1b","matchedDisplaySetsIndex","viewport2c","viewport3d","viewport3a","viewport2b","viewport1c","viewport0d","viewportStructure","layoutType","properties","rows","columns","hasUpdatedPriorsInformation","description","name","protocolMatchingRules","weight","attribute","constraint","greaterThan","toolGroupIds","displaySetSelectors","defaultDisplaySetId","seriesMatchingRules","value","equals","defaultViewport","viewportType","stages","viewports","numberOfPriorsReferenced","text","type","color","transform","customizationService","code","codeRef","this","Error","get","ref","label","commands","commandName","customizationType","menus","selector","_ref","nearbyToolData","items","actionType","subMenu","_ref2","protocol","delegating","_ref3","_ref4","_ref5","displaySet","options","sameAttribute","sameDisplaySetId","console","log","displaySetMatchDetails","match","displaySetInstanceUID","altDisplaySet","find","it","study","extraData","length","Math","max","map","ds","numImageFrames","preRegistration","servicesManager","hangingProtocolService","services","addCustomAttribute","numberOfDisplaySets","maxNumImageFrames","sameAs","getCustomizationModule","codingValues","contextMenuCodeItem","findingsContextMenu","getHangingProtocolModule","hpTestSwitch"],"sourceRoot":""}